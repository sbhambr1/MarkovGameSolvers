__author__ = "Sailik Sengupta and Siddhant Bhambri"

class MTD_Game(object):

    def __init__(self):
        self.S = [0, 1, 2, 3]

        self.A = [
            # Row player (Attacker) actions corresponding to each state
            [
	            ['success'],  #exploit success
                ['no-op', 'exp-ipfire'], #Attacker outside n/w 
                ['no-op', 'exp-win12', 'exp-win7', 'exp-ftp', 'exp-dns'], # Attacker on fw 
                ['no-op', 'exp-ftp'], #attacker on Win 12
            ],
            # Column player (Defender) actions corresponding to each state
            [
                ['lost'],
                ['no-mon', 'mon-ipfire'],
                ['no-mon', 'mon-win12', 'mon-win7', 'mon-ftp', 'mon-dns'],
                ['no-mon', 'mon-ftp'],
            ]
        ]

        # R(s, a1, a2)
        self.R = [
            [
                [-20]
            ],
            [
                [0, -3],
                [-6.8, 10]
            ],
            [
                [0, -3, -3, -5, -5],
                [-5, 5, -3, -5, -5],
                [-5, -3, 5, -5, -5],
		        [-10, -3, -3,  10, -5],
		        [-10, -3, -3, -5, 10]
				
            ],
            [
                [0, -3],
                [-0, 20]
            ]
        ]

        # T(s, a1, a2, s')
        self.T = [
            [
                [(1, 0, 0, 0)]
            ],
           
            [
                [(0, 1, 0, 0), (0, 1, 0, 0)],
                [(0, 0.32, 0.68, 0), (0, 0.9, 0.1, 0)]
            ],
            [
                [(0, 0, 1, 0), (0, 0, 1, 0), (0, 0, 1, 0),  (0, 0, 1, 0), (0, 0, 1, 0)],
                [(0, 0, 0.3, 0.7), (0.8, 0, 0.1, 0.1), (0.2, 0, 0.2, 0.6),  (0, 0, 0.3, 0.7), (0, 0, 0.3, 0.7)],
                [(0, 0, 0.3, 0.7), (0.4, 0, 0.4, 0.3), (0.8, 0, 0.1, 0.1),  (0, 0, 0.3, 0.7), (0, 0, 0.3, 0.7)],
                [(0, 0, 0.4, 0.6), (0.5, 0.1, 0.1, 0.2), (0, 0, 0.4, 0.6),  (0.8, 0, 0.1, 0.1), (0, 0, 0.4, 0.6)],
                [(0, 0, 0.4, 0.6), (0.5, 0.1, 0.1, 0.2), (0, 0, 0.4, 0.6),  (0, 0, 0.4, 0.6), (0.8, 0, 0.1, 0.1)],
            ],
            [
                [(0, 0, 0, 1), (0, 0, 0, 1)],
                [(0.8, 0, 0, 0.2), (0.4, 0.4, 0, 0.2)]
            ]
        ]

    def get_S(self):
        return self.S

    def get_A(self, player):
        return self.A[player]

    def get_R(self):
        return self.R

    def get_T(self):
        return self.T

class iCTF_Game(object):

    def __init__(self):
        self.S = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]

        self.A = [
            # Row player (Attacker) actions corresponding to each state
            [
                ['no-op', 'exp-1', 'exp-2', 'exp-3'], #Attacker on first server - S1
                ['no-op', 'exp-2', 'exp-3'], #Attacker on second server - S2
                ['no-op', 'exp-1', 'exp-2', 'exp-3'], #Attacker on first server - S3
                ['no-op', 'exp-3'], #Attacker on third server - S4
                ['no-op', 'exp-2', 'exp-3'], #Attacker on second server - S5
                ['no-op', 'exp-2', 'exp-3'], #Attacker on second server - S6
                ['no-op', 'exp-3'], #Attacker on third server - S7
                ['no-op', 'exp-3'], #Attacker on third server - S8
                ['no-op', 'exp-3'], #Attacker on third server - S9
                ['no-op', 'exp-3'] #Attacker on third server - S10
            ],
            # Column player (Defender) actions corresponding to each state
            [
                ['no-mon', 'hp-1', 'hp-2', 'hp-3'], # S1
                ['no-mon', 'hp-2', 'hp-3'], # S2
                ['no-mon', 'hp-1', 'hp-2', 'hp-3'], # S3
                ['no-mon', 'hp-3'], # S4
                ['no-mon', 'hp-2', 'hp-3'], # S5
                ['no-mon', 'hp-2', 'hp-3'], # S6
                ['no-mon', 'hp-3'], # S7
                ['no-mon', 'hp-3'], # S8
                ['no-mon', 'hp-3'], # S9
                ['no-mon', 'hp-3'] # S10
            ]
        ]

        # R(s, a1, a2)
        self.R = [
            [
                #state 1
                [0, -3, -3, -3],
                [-5.9, 2.9, -8.9, -8.9],
                [-5.9, -8.9, 2.9, -8.9],
                [-5.9, -8.9, -8.9, 2.9]
            ],
            [
                #state 2
                [0, -3, -3],
                [-5.9, 2.9, -8.9],
                [-5,9, -8.9, 2.9]
				
            ],
            [
                #state 3
                [0, -3, -3, -3],
                [-5.9, 2.9, -8.9, -8.9],
                [-5.9, -8.9, 2.9, -8.9],
                [-5.9, -8.9, -8.9, 2.9]
            ],
            [
                #state 4
                [0, -3],
                [-5.9, 2.9]
            ],
            [
                #state 5
                [0, -3, -3],
                [-5.9, 2.9, -8.9],
                [-5,9, -8.9, 2.9]
				
            ],
            [
                #state 6
                [0, -3, -3],
                [-5.9, 2.9, -8.9],
                [-5,9, -8.9, 2.9]
				
            ],
            [
                #state 7
                [0, -3],
                [-5.9, 2.9]
            ],
            [
                #state 8
                [0, -3],
                [-5.9, 2.9]
            ],
            [
                #state 9
                [0, -3],
                [-5.9, 2.9]
            ],
            [
                #state 10
                [0, -3],
                [-5.9, 2.9]
            ]
        ]

        # T(s, a1, a2, s')
        self.T = [           
            [
                #state 1
                [(1,0,0,0,0,0,0,0,0,0),(1,0,0,0,0,0,0,0,0,0),(1,0,0,0,0,0,0,0,0,0),(1,0,0,0,0,0,0,0,0,0)],
                [(0.25,0.75,0,0,0,0,0,0,0,0),(0.2,0.4,0.4,0,0,0,0,0,0,0),(0.25,0.75,0,0,0,0,0,0,0,0),(0.25,0.75,0,0,0,0,0,0,0,0)],
                [(0.25,0.75,0,0,0,0,0,0,0,0),(0.25,0.75,0,0,0,0,0,0,0,0),(0.2,0.4,0.4,0,0,0,0,0,0,0),(0.25,0.75,0,0,0,0,0,0,0,0)],
                [(0.25,0.75,0,0,0,0,0,0,0,0),(0.25,0.75,0,0,0,0,0,0,0,0),(0.25,0.75,0,0,0,0,0,0,0,0),(0.2,0.4,0.4,0,0,0,0,0,0,0)]
            ],
            [
                #state 2
                [(0,1,0,0,0,0,0,0,0,0),(0,1,0,0,0,0,0,0,0,0),(0,1,0,0,0,0,0,0,0,0)],
                [(0,0.25,0.75,0,0,0,0,0,0,0),(0,0.2,0,0.4,0.4,0,0,0,0,0),(0,0.25,0.75,0,0,0,0,0,0,0)],
                [(0,0.25,0.75,0,0,0,0,0,0,0),(0,0.25,0.75,0,0,0,0,0,0,0),(0,0.2,0,0.4,0.4,0,0,0,0,0)]
            ],
            [
                #state 3
                [(0,0,1,0,0,0,0,0,0,0),(0,0,1,0,0,0,0,0,0,0),(0,0,1,0,0,0,0,0,0,0),(0,0,1,0,0,0,0,0,0,0)],
                [(0,0,1,0,0,0,0,0,0,0),(0,0.25,0.75,0,0,0,0,0,0,0),(0,0,1,0,0,0,0,0,0,0),(0,0,1,0,0,0,0,0,0,0)],
                [(0,0,0.25,0,0.75,0,0,0,0,0),(0,0,0.25,0,0.75,0,0,0,0,0),(0,0,0.2,0,0.4,0.4,0,0,0,0),(0,0,0.25,0,0.75,0,0,0,0,0)],
                [(0,0,0.25,0,0.75,0,0,0,0,0),(0,0,0.25,0,0.75,0,0,0,0,0),(0,0,0.25,0,0.75,0,0,0,0,0),(0,0,0.2,0,0.4,0.4,0,0,0,0)]
            ],
            [
                #state 4
                [(0,0,0,1,0,0,0,0,0,0),(0,0,0,1,0,0,0,0,0,0)],
                [(0,0,0,0.25,0,0,0.75,0,0,0),(0,0,0,0.2,0,0,0.4,0.4,0,0)]
            ],
            [
                #state 5
                [(0,0,0,0,1,0,0,0,0,0),(0,0,0,0,1,0,0,0,0,0),(0,0,0,0,1,0,0,0,0,0)],
                [(0,0,0,0.25,0.75,0,0,0,0,0),(0,0,0,0,1,0,0,0,0,0),(0,0,0,0,1,0,0,0,0,0)],
                [(0,0,0,0,0.25,0,0,0.75,0,0),(0,0,0,0,0.25,0,0,0.75,0,0),(0,0,0,0,0.2,0,0,0.4,0.4,0)]
            ],
            [
                #state 6
                [(0,0,0,0,0,1,0,0,0,0),(0,0,0,0,0,1,0,0,0,0),(0,0,0,0,0,1,0,0,0,0)],
                [(0,0,0,0,0,1,0,0,0,0),(0,0,0,0,0.25,0.75,0,0,0,0),(0,0,0,0,0,1,0,0,0,0)],
                [(0,0,0,0,0,0.25,0,0,0.75,0),(0,0,0,0,0,0.25,0,0,0.75,0),(0,0,0,0,0,0.2,0,0,0.4,0.4)]
            ],
            [
                #state 7
                [(0,0,0,0,0,0,1,0,0,0),(0,0,0,0,0,0,1,0,0,0)],
                [(0,0,0,0,0,0,1,0,0,0),(0,0,0,0,0,0,1,0,0,0)]
            ],
            [
                #state 8
                [(0,0,0,0,0,0,0,1,0,0),(0,0,0,0,0,0,0,1,0,0)],
                [(0,0,0,0,0,0,0,1,0,0),(0,0,0,0,0,0,0.25,0.75,0,0)]
            ],
            [
                #state 9
                [(0,0,0,0,0,0,0,0,1,0),(0,0,0,0,0,0,0,0,1,0)],
                [(0,0,0,0,0,0,0,0,1,0),(0,0,0,0,0,0,0,0.25,0.75,0)]
            ],
            [
                #state 10
                [(0,0,0,0,0,0,0,0,0,1),(0,0,0,0,0,0,0,0,0,1)],
                [(0,0,0,0,0,0,0,0,0,1),(0,0,0,0,0,0,0,0,0.25,0.75)]
            ] 
        ]

    def get_S(self):
        return self.S

    def get_A(self, player):
        return self.A[player]

    def get_R(self):
        return self.R

    def get_T(self):
        return self.T